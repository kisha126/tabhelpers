% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cross-tab.R
\name{cross_table}
\alias{cross_table}
\title{Generate and Display a Cross Tabulation Table}
\usage{
cross_table(
  data,
  percentage = NULL,
  layout = TRUE,
  expected = TRUE,
  layout_center = FALSE,
  center_table = FALSE,
  header_underline = FALSE,
  style = NULL,
  ...
)
}
\arguments{
\item{data}{A matrix or table containing the observed frequencies for the cross-tabulation.}

\item{percentage}{A character vector or logical value specifying which percentages to display.
Options include:
\itemize{
\item \code{TRUE} or \code{"all"}: Display all percentages (row, column, and total).
\item \code{"by_row"}: Display row percentages.
\item \code{"by_col"}: Display column percentages.
\item \code{"by_total"}: Display total percentages.
\item \code{FALSE} or \code{NULL}: Do not display any percentages.
}}

\item{layout}{Logical. If \code{TRUE}, a layout box explaining the table structure is displayed.}

\item{expected}{Logical. If \code{TRUE}, expected frequencies are displayed alongside observed frequencies.}

\item{layout_center}{Logical. If \code{TRUE}, the layout box is centered in the terminal.}

\item{center_table}{Logical. If \code{TRUE}, the entire table is centered in the terminal.}

\item{header_underline}{If \code{TRUE}, the width of the line that indicates the "response" is shorten.}

\item{style}{Default to \code{NULL}. If provided, the components in the displayed table can be styled.
It has 9 components that can be styled:
\itemize{
\item \code{observed}: Style for the displayed observed values.
\item \code{expected}: Style for the displayed expected values.
\item \code{total}: Style for the displayed total frequencies (marginal and grand total).
\item \code{row_percentage}: Style for the displayed row percentages.
\item \code{col_percentage}: Style for the displayed column percentages.
\item \code{total_percentage}: Style for the marginal percentages.
\item \code{title}: Style for the title of the table.
\item \code{border}: Character used to draw the table borders (must be a single character).
\item \code{border_text}: Style for the table borders.
}

Each style component can be specified in two ways:
\enumerate{
\item As a string: Use a combination of style names from the \code{cli} package, separated by
underscores (e.g., "blue_italic", "red_bold"). Available styles include colors
(e.g., "red", "blue", "green") and text formats (e.g., "bold", "italic", "underline").
\item As a function: A lambda function that takes a context object and returns formatted text.
The context object contains:
\itemize{
\item \code{formatted_text}: The text to be styled
\item \code{value}: The original numeric value
\item \code{type}: The component type (e.g., "observed", "expected")
\item \code{is_total}: Logical indicating if the cell is a total
\item \code{raw}: Logical indicating if the value is raw (TRUE) or formatted (FALSE)
}
}}

\item{...}{Additional arguments (not currently used).}
}
\value{
Invisibly returns the formatted cross-tabulation table as a matrix. The table is printed to the console/command line.
}
\description{
This function creates a cross-tabulation (contingency) table from a given data matrix or table.
It supports displaying observed frequencies, expected frequencies, and various percentages
(row, column, and total). The table can be formatted and centered in the terminal for better readability.
}
\examples{
# Example 1: Basic cross-tabulation
data <- matrix(c(10, 20, 30, 40), nrow = 2, byrow = TRUE)
cross_table(data)

# Example 2: Display row and column percentages
cross_table(data, percentage = c("by_row", "by_col"))

# Example 3: Overall component with style
matrix(c(10, 20, 30, 40), nrow = 2, byrow = TRUE) |> # Use `\%>\%` from `magrittr` if preferred
    cross_table(
        percentage = "all",
        style = list(
            observed = \(ctx) cli::col_yellow(ctx$formatted_text),
            expected = \(ctx) cli::style_italic(ctx$formatted_text),
            row_percentage = "blue_italic",
            col_percentage = "blue_italic",
            total_percentage = "red_italic",
            total = \(ctx) cli::style_italic(ctx$formatted_text),
            border = "=",
            border_text = "cyan",
            title = \(ctx) cli::style_bold(cli::col_blue(ctx$formatted_text))
        )
    )

# A large table (from https://blogs.sas.com/content/iml/2018/04/02/chi-square-rows-columns-sas.html)
matrix(
    c(6, 51, 69, 68, 28,
      16, 94, 90, 94, 47,
      0, 37, 69, 55, 38),
    byrow = TRUE,
    ncol = 5,
    dimnames = list(
        "Eyes" = c("blue", "brown", "green"),
        "Hair" = c("black", "dark", "fair", "medium", "red")
    )
) |>
    cross_table(
        percentage = "all",
        header_underline = T,
        style = list(
            expected = "italic"
        ),
        center_table = T
    )
# The previous example without using `cli` package
matrix(
    c(6, 51, 69, 68, 28,
      16, 94, 90, 94, 47,
      0, 37, 69, 55, 38),
    byrow = TRUE,
    ncol = 5,
    dimnames = list(
        "Eyes" = c("blue", "brown", "green"),
        "Hair" = c("black", "dark", "fair", "medium", "red")
    )
) |>
    cross_table(
        percentage = "all",
        header_underline = TRUE,
        style = list(
            # Italic using ANSI escape sequence
            expected = \(ctx) paste0("\033[3m", ctx$formatted_text, "\033[23m"),
            # Bold using ANSI escape sequence
            total_percentage = \(ctx) paste0("\033[1m", ctx$formatted_text, "\033[22m"),
            # Blue text using ANSI escape sequence
            observed = \(ctx) paste0("\033[34m", ctx$formatted_text, "\033[39m"),
            # Change border character
            border = "-"
        ),
        center_table = TRUE
    )


}
